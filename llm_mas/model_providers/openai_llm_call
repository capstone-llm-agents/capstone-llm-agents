"""OpenAI LLM call modified the ollama llm call"""


import os
from openai import OpenAI
from llm_mas.mas.conversation import UserAssistantExample, UserMessage


async def call_llm(prompt: str) -> str:
    client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))
    response = client.chat.completions.create(
        model="gpt-4o-mini",  
        messages=[{"role": "user", "content": prompt}],
    )
    content =  response.choices[0].message.content
    if not content:
        msg = "No content returned from Ollama LLM."
        raise ValueError(msg)
    return content


async def call_llm_with_messages(messages: list[dict]) -> str:
    client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))
    response = client.chat.completions.create(
        model="gpt-4o-mini",  
        messages=messages,
    )
    content = response.choices[0].message.content
    if not content:
        msg = "No content returned from Ollama LLM."
        raise ValueError(msg)
    return content


async def call_llm_with_examples(
    examples: list[UserAssistantExample],
    user_message: UserMessage,
) -> str:
    messages = [example.user_message.as_dict() for example in examples]
    messages.append(user_message.as_dict())
    client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))
    response = client.chat.completions.create(
        model="gpt-4o-mini",  
        messages=messages,
    )
    content = response.choices[0].message.content
    if not content:
        msg = "No content returned from Ollama LLM with examples."
        raise ValueError(msg)
    return content
